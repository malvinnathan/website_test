{"ast":null,"code":"var _jsxFileName = \"/Users/malvinnathan/Downloads/website-master/client/src/components/DrawbarDetail.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Grid, Button, makeStyles } from '@material-ui/core';\nimport { useLocation } from \"react-router-dom\"; // useStyles = control the CSS of the website\n// styles\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(() => ({\n  gridContainer: {\n    alignItems: 'center',\n    '& .MuiGrid-item': {\n      display: 'flex',\n      justifyContent: 'center'\n    }\n  },\n  header: {\n    color: \"#000000\",\n    display: 'flex',\n    fontSize: \"35px\",\n    justifyContent: 'center'\n  },\n  button: {\n    borderRadius: 5,\n    backgroundColor: \"#0992DF\",\n    color: \"white\",\n    fontSize: \"20px\",\n    padding: \"10px\"\n  },\n  text: {\n    color: \"white\",\n    fontSize: \"32px\"\n  }\n}));\n\nfunction Call_api() {\n  _s();\n\n  const classes = useStyles();\n  const [data, setData] = useState(null);\n  const location = useLocation();\n  const id = location.state.detail;\n  useEffect(() => {\n    const url = `http://localhost:3000/getdrawbar/${id}`;\n    fetch(url).then(resp => resp.json()).then(resp => setData(resp));\n  }, []);\n\n  if (data) {\n    return /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      xs: 12,\n      className: classes.container,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        style: {\n          display: 'flex',\n          justifyContent: 'center'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\" Instrumented Drawbar \", data.drawbar.sensor_number, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 10\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        style: {\n          display: 'flex',\n          justifyContent: 'left',\n          marginLeft: '400px'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Purpose : Measure in-train forces \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 45\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 50\n          }, this), \"IRT ID : \", data.drawbar.sensor_number, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 49\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 54\n          }, this), \"Vehicle ID: \", data.drawbar.vehicle_id, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 49\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 54\n          }, this), \"Installation Date : \", data.drawbar.manufacture_date.slice(0, 10), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 75\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 80\n          }, this), \"Callibration Date : \", data.drawbar.calibration_date.slice(0, 10), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 75\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 80\n          }, this), \"Status Check : \", data.drawbar.status, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 48\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        style: {\n          display: 'flex',\n          justifyContent: 'right',\n          marginRight: '400px'\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          className: classes.button,\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            style: {\n              color: \"#0992DF\"\n            },\n            href: \"mailto:irt.enquiries@monash.edu\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                color: 'white'\n              },\n              children: \" Update\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 12\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }, this);\n  }\n}\n\n_s(Call_api, \"MLAMmTWJfud5Mkjm8jeZR1b+464=\", false, function () {\n  return [useStyles, useLocation];\n});\n\n_c = Call_api;\nexport default Call_api;\n\nvar _c;\n\n$RefreshReg$(_c, \"Call_api\");","map":{"version":3,"sources":["/Users/malvinnathan/Downloads/website-master/client/src/components/DrawbarDetail.jsx"],"names":["React","useEffect","useState","Grid","Button","makeStyles","useLocation","useStyles","gridContainer","alignItems","display","justifyContent","header","color","fontSize","button","borderRadius","backgroundColor","padding","text","Call_api","classes","data","setData","location","id","state","detail","url","fetch","then","resp","json","container","drawbar","sensor_number","marginLeft","vehicle_id","manufacture_date","slice","calibration_date","status","marginRight"],"mappings":"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","sourcesContent":["import React, {useEffect,useState} from 'react'\nimport {\n    Grid,\n    Button,\n    makeStyles,\n  } from '@material-ui/core';\n  import { useLocation } from \"react-router-dom\";\n\n\n\n// useStyles = control the CSS of the website\n// styles\nconst useStyles = makeStyles(() => ({\n  gridContainer: {\n    alignItems: 'center',\n    '& .MuiGrid-item': {\n      display: 'flex',\n      justifyContent: 'center'\n    }\n  },\n  header: {\n    color: \"#000000\",\n    display: 'flex',\n    fontSize: \"35px\",\n    justifyContent: 'center'\n  },\n  button: {\n    borderRadius: 5,\n     backgroundColor: \"#0992DF\",\n     color: \"white\",\n     fontSize: \"20px\",\n     padding: \"10px\"\n   },\n  text: {\n    color: \"white\",\n    fontSize: \"32px\"\n  },\n}));\n\n\nfunction Call_api(){\n  const classes = useStyles();\n  const [data,setData] = useState(null)\n  const location = useLocation();\n\n  const id = location.state.detail;\n  useEffect(()=>{\n    const url = `http://localhost:3000/getdrawbar/${id}`;\n    fetch(url).then(resp=>resp.json())\n    .then(resp=>setData(resp))\n  },[])\n\n  \n  if (data){\n    return(\n\n\n\n    <Grid container xs={12} className={classes.container} >\n\n      <Grid item xs={12} style={{display: 'flex', justifyContent: 'center'}}>\n         <h1> Instrumented Drawbar {data.drawbar.sensor_number} </h1>\n      </Grid>\n      \n      <Grid item xs={12} style = {{display: 'flex', justifyContent: 'left', marginLeft: '400px'}}>\n        <h2> \n          Purpose : Measure in-train forces <br/><br/>\n          IRT ID : {data.drawbar.sensor_number} <br/><br/>\n          Vehicle ID: {data.drawbar.vehicle_id} <br/><br/>\n          Installation Date : {data.drawbar.manufacture_date.slice(0,10)} <br/><br/>\n          Callibration Date : {data.drawbar.calibration_date.slice(0,10)} <br/><br/>\n          Status Check : {data.drawbar.status} <br/>\n        </h2>\n      </Grid>\n      \n      <Grid item xs={12} style={{display: 'flex', justifyContent: 'right', marginRight: '400px'}}>\n        <Button className={classes.button}>\n           <a style={{color: \"#0992DF\"}}href=\"mailto:irt.enquiries@monash.edu\" >\n              <div style={{color: 'white'}}> Update</div>\n          </a>\n        </Button>\n      </Grid>\n     \n    </Grid>\n     \n     )\n\n  }\n  \n}\n\nexport default Call_api;"]},"metadata":{},"sourceType":"module"}