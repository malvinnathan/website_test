[{"/Users/malvinnathan/Downloads/website-master/client/src/index.js":"1","/Users/malvinnathan/Downloads/website-master/client/src/App.js":"2","/Users/malvinnathan/Downloads/website-master/client/src/reportWebVitals.js":"3","/Users/malvinnathan/Downloads/website-master/client/src/components/Dashboard.jsx":"4","/Users/malvinnathan/Downloads/website-master/client/src/components/AccelerometerListPage.jsx":"5","/Users/malvinnathan/Downloads/website-master/client/src/components/ErrorBoundary.jsx":"6","/Users/malvinnathan/Downloads/website-master/client/src/components/Home.jsx":"7","/Users/malvinnathan/Downloads/website-master/client/src/components/DrawbarListPage.jsx":"8","/Users/malvinnathan/Downloads/website-master/client/src/components/SpringDetail.jsx":"9","/Users/malvinnathan/Downloads/website-master/client/src/components/SpringListPage.jsx":"10","/Users/malvinnathan/Downloads/website-master/client/src/components/contact_us.jsx":"11","/Users/malvinnathan/Downloads/website-master/client/src/components/DrawbarDetail.jsx":"12","/Users/malvinnathan/Downloads/website-master/client/src/components/DrawbarS1115.jsx":"13","/Users/malvinnathan/Downloads/website-master/client/src/components/AccelerometerS1111.jsx":"14","/Users/malvinnathan/Downloads/website-master/client/src/components/SteerDetail.jsx":"15","/Users/malvinnathan/Downloads/website-master/client/src/components/AccelerometerDetail.jsx":"16","/Users/malvinnathan/Downloads/website-master/client/src/components/SteerListPage.jsx":"17"},{"size":579,"mtime":1651684056000,"results":"18","hashOfConfig":"19"},{"size":1965,"mtime":1651684056000,"results":"20","hashOfConfig":"19"},{"size":362,"mtime":1651684056000,"results":"21","hashOfConfig":"19"},{"size":1940,"mtime":1651684056000,"results":"22","hashOfConfig":"19"},{"size":3086,"mtime":1651684056000,"results":"23","hashOfConfig":"19"},{"size":1614,"mtime":1651684056000,"results":"24","hashOfConfig":"19"},{"size":2108,"mtime":1651684056000,"results":"25","hashOfConfig":"19"},{"size":3364,"mtime":1651684056000,"results":"26","hashOfConfig":"19"},{"size":2246,"mtime":1651684056000,"results":"27","hashOfConfig":"19"},{"size":3457,"mtime":1651684056000,"results":"28","hashOfConfig":"19"},{"size":1246,"mtime":1651684056000,"results":"29","hashOfConfig":"19"},{"size":2236,"mtime":1651684056000,"results":"30","hashOfConfig":"19"},{"size":3316,"mtime":1651684056000,"results":"31","hashOfConfig":"19"},{"size":1682,"mtime":1651684056000,"results":"32","hashOfConfig":"19"},{"size":2224,"mtime":1651684056000,"results":"33","hashOfConfig":"19"},{"size":2207,"mtime":1651684056000,"results":"34","hashOfConfig":"19"},{"size":3330,"mtime":1651684056000,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"7nwt2y",{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73"},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83"},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87"},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/malvinnathan/Downloads/website-master/client/src/index.js",[],[],"/Users/malvinnathan/Downloads/website-master/client/src/App.js",[],[],"/Users/malvinnathan/Downloads/website-master/client/src/reportWebVitals.js",[],[],"/Users/malvinnathan/Downloads/website-master/client/src/components/Dashboard.jsx",[],[],"/Users/malvinnathan/Downloads/website-master/client/src/components/AccelerometerListPage.jsx",[],[],"/Users/malvinnathan/Downloads/website-master/client/src/components/ErrorBoundary.jsx",[],[],"/Users/malvinnathan/Downloads/website-master/client/src/components/Home.jsx",[],[],"/Users/malvinnathan/Downloads/website-master/client/src/components/DrawbarListPage.jsx",[],[],"/Users/malvinnathan/Downloads/website-master/client/src/components/SpringDetail.jsx",["91"],[],"import React, {useEffect,useState} from 'react'\nimport {\n    Grid,\n    Button,\n    makeStyles,\n  } from '@material-ui/core';\n  import { useLocation } from \"react-router-dom\";\n\n\n\n// useStyles = control the CSS of the website\n// styles\nconst useStyles = makeStyles(() => ({\n  gridContainer: {\n    alignItems: 'center',\n    '& .MuiGrid-item': {\n      display: 'flex',\n      justifyContent: 'center'\n    }\n  },\n  header: {\n    color: \"#000000\",\n    display: 'flex',\n    fontSize: \"35px\",\n    justifyContent: 'center'\n  },\n  button: {\n    borderRadius: 5,\n     backgroundColor: \"#0992DF\",\n     color: \"white\",\n     fontSize: \"20px\",\n     padding: \"10px\"\n   },\n  text: {\n    color: \"white\",\n    fontSize: \"32px\"\n  },\n}));\n\n\nfunction Call_api(){\n  const classes = useStyles();\n  const [data,setData] = useState(null)\n  const location = useLocation();\n\n  const id = location.state.detail;\n  useEffect(()=>{\n    const url = `http://localhost:3000/getspring/${id}`;\n    fetch(url).then(resp=>resp.json())\n    .then(resp=>setData(resp))\n  },[])\n\n  \n  if (data){\n    return(\n\n\n\n    <Grid container xs={12} className={classes.container} >\n\n      <Grid item xs={12} style={{display: 'flex', justifyContent: 'center'}}>\n         <h1> Instrumented Suspension Spring {data.spring.sensor_number} </h1>\n      </Grid>\n      \n      <Grid item xs={12} style = {{display: 'flex', justifyContent: 'left', marginLeft: '400px'}}>\n        <h2> \n          Purpose : Measure suspension displacement <br/><br/>\n          IRT ID : {data.spring.sensor_number} <br/><br/>\n          Vehicle ID: {data.spring.vehicle_id} <br/><br/>\n          Installation Date : {data.spring.manufacture_date.slice(0,10)} <br/><br/>\n          Callibration Date : {data.spring.calibration_date.slice(0,10)} <br/><br/>\n          Status Check : {data.spring.status} <br/>\n        </h2>\n      </Grid>\n      \n      <Grid item xs={12} style={{display: 'flex', justifyContent: 'right', marginRight:'400px'}}>\n        <Button className={classes.button}>\n           <a style={{color: \"#0992DF\"}}href=\"mailto:irt.enquiries@monash.edu\" >\n              <div style={{color: 'white'}}> Update</div>\n          </a>\n        </Button>\n      </Grid>\n     \n    </Grid>\n     \n     )\n\n  }\n  \n}\n\nexport default Call_api;","/Users/malvinnathan/Downloads/website-master/client/src/components/SpringListPage.jsx",[],[],"/Users/malvinnathan/Downloads/website-master/client/src/components/contact_us.jsx",[],[],"/Users/malvinnathan/Downloads/website-master/client/src/components/DrawbarDetail.jsx",["92"],[],"import React, {useEffect,useState} from 'react'\nimport {\n    Grid,\n    Button,\n    makeStyles,\n  } from '@material-ui/core';\n  import { useLocation } from \"react-router-dom\";\n\n\n\n// useStyles = control the CSS of the website\n// styles\nconst useStyles = makeStyles(() => ({\n  gridContainer: {\n    alignItems: 'center',\n    '& .MuiGrid-item': {\n      display: 'flex',\n      justifyContent: 'center'\n    }\n  },\n  header: {\n    color: \"#000000\",\n    display: 'flex',\n    fontSize: \"35px\",\n    justifyContent: 'center'\n  },\n  button: {\n    borderRadius: 5,\n     backgroundColor: \"#0992DF\",\n     color: \"white\",\n     fontSize: \"20px\",\n     padding: \"10px\"\n   },\n  text: {\n    color: \"white\",\n    fontSize: \"32px\"\n  },\n}));\n\n\nfunction Call_api(){\n  const classes = useStyles();\n  const [data,setData] = useState(null)\n  const location = useLocation();\n\n  const id = location.state.detail;\n  useEffect(()=>{\n    const url = `http://localhost:3000/getdrawbar/${id}`;\n    fetch(url).then(resp=>resp.json())\n    .then(resp=>setData(resp))\n  },[])\n\n  \n  if (data){\n    return(\n\n\n\n    <Grid container xs={12} className={classes.container} >\n\n      <Grid item xs={12} style={{display: 'flex', justifyContent: 'center'}}>\n         <h1> Instrumented Drawbar {data.drawbar.sensor_number} </h1>\n      </Grid>\n      \n      <Grid item xs={12} style = {{display: 'flex', justifyContent: 'left', marginLeft: '400px'}}>\n        <h2> \n          Purpose : Measure in-train forces <br/><br/>\n          IRT ID : {data.drawbar.sensor_number} <br/><br/>\n          Vehicle ID: {data.drawbar.vehicle_id} <br/><br/>\n          Installation Date : {data.drawbar.manufacture_date.slice(0,10)} <br/><br/>\n          Callibration Date : {data.drawbar.calibration_date.slice(0,10)} <br/><br/>\n          Status Check : {data.drawbar.status} <br/>\n        </h2>\n      </Grid>\n      \n      <Grid item xs={12} style={{display: 'flex', justifyContent: 'right', marginRight: '400px'}}>\n        <Button className={classes.button}>\n           <a style={{color: \"#0992DF\"}}href=\"mailto:irt.enquiries@monash.edu\" >\n              <div style={{color: 'white'}}> Update</div>\n          </a>\n        </Button>\n      </Grid>\n     \n    </Grid>\n     \n     )\n\n  }\n  \n}\n\nexport default Call_api;","/Users/malvinnathan/Downloads/website-master/client/src/components/DrawbarS1115.jsx",[],[],"/Users/malvinnathan/Downloads/website-master/client/src/components/AccelerometerS1111.jsx",[],[],"/Users/malvinnathan/Downloads/website-master/client/src/components/SteerDetail.jsx",["93"],[],"import React, {useEffect,useState} from 'react'\nimport {\n    Grid,\n    Button,\n    makeStyles,\n  } from '@material-ui/core';\n  import { useLocation } from \"react-router-dom\";\n\n\n\n// useStyles = control the CSS of the website\n// styles\nconst useStyles = makeStyles(() => ({\n  gridContainer: {\n    alignItems: 'center',\n    '& .MuiGrid-item': {\n      display: 'flex',\n      justifyContent: 'center'\n    }\n  },\n  header: {\n    color: \"#000000\",\n    display: 'flex',\n    fontSize: \"35px\",\n    justifyContent: 'center'\n  },\n  button: {\n    borderRadius: 5,\n     backgroundColor: \"#0992DF\",\n     color: \"white\",\n     fontSize: \"20px\",\n     padding: \"10px\"\n   },\n  text: {\n    color: \"white\",\n    fontSize: \"32px\"\n  },\n}));\n\n\nfunction Call_api(){\n  const classes = useStyles();\n  const [data,setData] = useState(null)\n  const location = useLocation();\n\n  const id = location.state.detail;\n  useEffect(()=>{\n    const url = `http://localhost:3000/getsteer/${id}`;\n    fetch(url).then(resp=>resp.json())\n    .then(resp=>setData(resp))\n  },[])\n\n  \n  if (data){\n    return(\n\n\n\n    <Grid container xs={12} className={classes.container} >\n\n      <Grid item xs={12} style={{display: 'flex', justifyContent: 'center'}}>\n         <h1> Steer Sensor {data.steer.sensor_number} </h1>\n      </Grid>\n      \n      <Grid item xs={12} style = {{display: 'flex', justifyContent: 'left', marginLeft: '400px'}}>\n        <h2> \n          Purpose : Measure the rotation of the bogie <br/><br/>\n          IRT ID : {data.steer.sensor_number} <br/><br/>\n          Vehicle ID: {data.steer.vehicle_id} <br/><br/>\n          Installation Date : {data.steer.manufacture_date.slice(0,10)} <br/><br/>\n          Callibration Date : {data.steer.calibration_date.slice(0,10)} <br/><br/>\n          Status Check : {data.steer.status} <br/>\n        </h2>\n      </Grid>\n      \n      <Grid item xs={12} style={{display: 'flex', justifyContent: 'right', marginRight: '400px'}}>\n        <Button className={classes.button}>\n           <a style={{color: \"#0992DF\"}}href=\"mailto:irt.enquiries@monash.edu\" >\n              <div style={{color: 'white'}}> Update</div>\n          </a>\n        </Button>\n      </Grid>\n     \n    </Grid>\n     \n     )\n\n  }\n  \n}\n\nexport default Call_api;","/Users/malvinnathan/Downloads/website-master/client/src/components/AccelerometerDetail.jsx",["94"],[],"import React, {useEffect,useState} from 'react'\nimport {\n    Grid,\n    Button,\n    makeStyles,\n  } from '@material-ui/core';\n  import { useLocation } from \"react-router-dom\";\n\n\n\n// useStyles = control the CSS of the website\n// styles\nconst useStyles = makeStyles(() => ({\n  gridContainer: {\n    alignItems: 'center',\n    '& .MuiGrid-item': {\n      display: 'flex',\n      justifyContent: 'center'\n    }\n  },\n  header: {\n    color: \"#000000\",\n    display: 'flex',\n    fontSize: \"35px\",\n    justifyContent: 'center'\n  },\n   button: {\n    borderRadius: 5,\n     backgroundColor: \"#0992DF\",\n     color: \"white\",\n     fontSize: \"20px\",\n     padding: \"10px\"\n   },\n  text: {\n    color: \"white\",\n    fontSize: \"32px\"\n  },\n}));\n\n\nfunction Call_api(){\n\n  const classes = useStyles();\n  const [data,setData] = useState(null)\n  const location = useLocation();\n\n  const id = location.state.detail;\n  useEffect(()=>{\n    const url = `http://localhost:3000/getirt/${id}`;\n    fetch(url).then(resp=>resp.json())\n    .then(resp=>setData(resp))\n  },[])\n\n  \n  if (data){\n    return(\n\n\n\n    <Grid container xs={12} className={classes.container} >\n\n      <Grid item xs={12} style={{display: 'flex', justifyContent: 'center'}}>\n         <h1> Accelerometer {data.irt.sensor_number} </h1>\n      </Grid>\n      \n      <Grid item xs={12} style={{display: 'flex', justifyContent: 'center'}}>\n        <h2> \n          Purpose : Measure the vibration / shock through the wheels <br/><br/>\n          IRT ID : {data.irt.sensor_number} <br/><br/>\n          Vehicle ID: {data.irt.vehicle_id} <br/><br/>\n          Installation Date : {data.irt.manufacture_date.slice(0,10)} <br/><br/>\n          Callibration Date : {data.irt.calibration_date.slice(0,10)} <br/><br/>\n          Status Check : {data.irt.status} <br/>\n        </h2>\n      </Grid>\n      \n      <Grid item xs={12} style={{display: 'flex', justifyContent: 'right', marginRight: '400px'}}>\n        <Button className={classes.button}>\n           <a style={{color: \"#0992DF\"}}href=\"mailto:irt.enquiries@monash.edu\" >\n              <div style={{color: 'white'}}> Update</div>\n          </a>\n        </Button>\n      </Grid>\n     \n    </Grid>\n     \n     )\n\n  }\n  \n}\n\nexport default Call_api;","/Users/malvinnathan/Downloads/website-master/client/src/components/SteerListPage.jsx",[],[],{"ruleId":"95","severity":1,"message":"96","line":51,"column":5,"nodeType":"97","endLine":51,"endColumn":7,"suggestions":"98"},{"ruleId":"95","severity":1,"message":"96","line":51,"column":5,"nodeType":"97","endLine":51,"endColumn":7,"suggestions":"99"},{"ruleId":"95","severity":1,"message":"96","line":51,"column":5,"nodeType":"97","endLine":51,"endColumn":7,"suggestions":"100"},{"ruleId":"95","severity":1,"message":"96","line":52,"column":5,"nodeType":"97","endLine":52,"endColumn":7,"suggestions":"101"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["102"],["103"],["104"],["105"],{"desc":"106","fix":"107"},{"desc":"106","fix":"108"},{"desc":"106","fix":"109"},{"desc":"106","fix":"110"},"Update the dependencies array to be: [id]",{"range":"111","text":"112"},{"range":"113","text":"112"},{"range":"114","text":"112"},{"range":"115","text":"112"},[1030,1032],"[id]",[1031,1033],[1029,1031],[1029,1031]]